// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using RootRPGProject.Model;
//
//    var tag = Tag.FromJson(jsonString);

namespace RootRPGProject.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Tag
    {
        [JsonProperty("positive")]
        public bool Positive { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("effect")]
        public string Effect { get; set; }
    }

    public partial class Tag
    {
        public static Tag FromJson(string json) => JsonConvert.DeserializeObject<Tag>(json, RootRPGProject.Models.TagConverter.Settings);
    }

    public static class SerializeTag
    {
        public static string ToJson(this Tag self) => JsonConvert.SerializeObject(self, RootRPGProject.Models.TagConverter.Settings);
    }

    internal static class TagConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
